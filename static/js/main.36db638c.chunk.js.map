{"version":3,"sources":["pages/HomePage.js","pages/ProjectsPage.js","context/SocialData.js","components/Menu.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["HomeWrapper","styled","nav","HomePage","scroll","SmoothScroll","speed","console","log","className","id","href","Projects","SocialData","icon","url","HomeIcon","MenuWrapper","Menu","checkMe","useRef","$scrollableElement","document","querySelector","handleMenu","event","target","type","disablePageScroll","enablePageScroll","current","checked","ref","onChange","onClick","NavWrapper","NavBar","useState","window","innerWidth","innerHeight","size","setSize","width","height","useEffect","handleResize","addEventListener","removeEventListener","map","item","key","App","path","exact","component","Home","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.36db638c.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SmoothScroll from 'smooth-scroll';\r\n//yarn add smooth-scroll\r\n\r\nconst HomePage = () => {\r\n  const scroll = new SmoothScroll ('a[href*=\"#\"]', {\r\n    speed: 1500,\r\n  });\r\n  console.log (scroll);\r\n\r\n  return (\r\n    <HomeWrapper>\r\n      <div className=\"container\">\r\n        {/* <h1>Smooth Scroll</h1> */}\r\n\r\n        <div className=\"main\" id=\"section1\">\r\n          <h2>Section 1</h2>\r\n          <p>Click on the link to see the \"smooth\" scrolling effect.</p>\r\n          <a href=\"#section2\">Click Me to Smooth Scroll to Section 2 Below</a>\r\n          <p>\r\n            Note: Remove the scroll-behavior property to remove smooth\r\n            scrolling.\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"main\" id=\"section2\">\r\n          <h2>Section 2</h2>\r\n          <a href=\"#section1\">Click Me to Smooth Scroll to Section 1 Above</a>\r\n        </div>\r\n      </div>\r\n    </HomeWrapper>\r\n  );\r\n};\r\n\r\nconst HomeWrapper = styled.nav`\r\n  color: black;\r\n\r\n  html {\r\n    scroll-behavior: smooth;\r\n  }\r\n\r\n  #section1 {\r\n    height: 100vh;\r\n    background-color: pink;\r\n  }\r\n\r\n  #section2 {\r\n    height: 100vh;\r\n    background-color: yellow;\r\n  }\r\n`;\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\n\r\nconst Projects = () => {\r\n  return <div>Hello from Projects Page</div>;\r\n};\r\n\r\nexport default Projects;\r\n","//COMPONENTE_REUTILIZAVEL\r\nimport React from 'react';\r\nimport {FaLinkedin, FaGithub, FaTwitter, FaHome} from 'react-icons/fa';\r\n//yarn add react-icons\r\n\r\nexport const SocialData = [\r\n  {\r\n    id: 3,\r\n    icon: <FaTwitter className=\"icon\" />,\r\n    url: 'https://twitter.com/eversavio',\r\n  },\r\n  {\r\n    id: 2,\r\n    icon: <FaGithub className=\"icon\" />,\r\n    url: 'https://www.github.com/evertonsavio',\r\n  },\r\n  {\r\n    id: 1,\r\n    icon: <FaLinkedin className=\"icon\" />,\r\n    url: 'https://www.linkedin.com/in/evertonsavio/',\r\n  },\r\n];\r\n\r\nexport const HomeIcon = {\r\n  id: 4,\r\n  icon: <FaHome className=\"icon\" />,\r\n  url: '#',\r\n};\r\n","import React, {useState, useRef, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {disablePageScroll, enablePageScroll} from 'scroll-lock';\r\n//yarn add scroll-lock\r\n\r\nconst Menu = () => {\r\n  let checkMe = useRef();\r\n  const $scrollableElement = document.querySelector('.my-scrollable-element');\r\n  //Pass the element to the argument and disable scrolling on the page\r\n\r\n  const handleToggle = (event) => {\r\n    //console.log(checkMe.current.checked);\r\n    checkMe.current.checked === true\r\n      ? disablePageScroll($scrollableElement)\r\n      : enablePageScroll($scrollableElement);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    event.target.type === 'checkbox'\r\n      ? disablePageScroll($scrollableElement)\r\n      : enablePageScroll($scrollableElement);\r\n    checkMe.current.checked = false;\r\n  };\r\n\r\n  return (\r\n    <MenuWrapper>\r\n      <div className=\"menu-container\">\r\n        <input\r\n          type=\"checkbox\"\r\n          ref={checkMe}\r\n          onChange={handleToggle}\r\n          className=\"toggler\"\r\n        />\r\n        <div className=\"hamburguer\">\r\n          <div />\r\n        </div>\r\n        <div className=\"menu\" onClick={handleMenu}>\r\n          <div>\r\n            <ul>\r\n              <li>\r\n                <a href=\"#\" onClick={handleMenu}>\r\n                  Inicio\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\" onClick={handleMenu}>\r\n                  Projetos\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\" onClick={handleMenu}>\r\n                  Sobre Mim\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\" onClick={handleMenu}>\r\n                  Contato\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </MenuWrapper>\r\n  );\r\n};\r\n\r\nconst MenuWrapper = styled.nav`\r\n  .menu-container {\r\n    position: fixed;\r\n    margin-top: 20px;\r\n    margin-right: 20px;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: 2;\r\n  }\r\n  .toggler {\r\n    position: absolute;\r\n    top: 0.5rem;\r\n    right: 0.5rem;\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 50%;\r\n    opacity: 0;\r\n    z-index: 3;\r\n    cursor: pointer;\r\n  }\r\n  .hamburguer {\r\n    position: absolute;\r\n    top: 0.5rem;\r\n    right: 0.5rem;\r\n    width: 60px;\r\n    height: 60px;\r\n    border-radius: 50%;\r\n    background-color: #282c34;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 2;\r\n  }\r\n\r\n  .hamburguer > div {\r\n    position: absolute;\r\n    width: 50%;\r\n    height: 3px;\r\n    border-radius: 1.5px;\r\n    background-color: #61dafb;\r\n    transition: 0.4s;\r\n  }\r\n\r\n  .hamburguer > div:before,\r\n  .hamburguer > div:after {\r\n    content: '';\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 3px;\r\n    border-radius: 1.5px;\r\n    background-color: #61dafb;\r\n  }\r\n  .hamburguer > div:before {\r\n    top: -10px;\r\n  }\r\n\r\n  .hamburguer > div:after {\r\n    top: 10px;\r\n  }\r\n\r\n  .toggler:checked + .hamburguer > div {\r\n    transform: rotate(225deg);\r\n  }\r\n\r\n  .toggler:checked:hover + .hamburguer > div {\r\n    transform: rotate(315deg);\r\n  }\r\n\r\n  .toggler:checked + .hamburguer > div:after,\r\n  .toggler:checked + .hamburguer > div:before {\r\n    transform: rotate(90deg);\r\n    top: 0;\r\n  }\r\n\r\n  .toggler:checked ~ .menu {\r\n    visibility: visible;\r\n  }\r\n\r\n  .toggler:checked ~ .menu > div {\r\n    transform: translateX(-50%) translateY(-50%);\r\n    opacity: 1;\r\n  }\r\n\r\n  .menu {\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    right: 0;\r\n    visibility: hidden;\r\n  }\r\n  .menu > div {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 120%;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateX(-150%) translateY(-50%);\r\n    background-color: rgba(0, 0, 0, 0.9);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    transition: 0.6s;\r\n    opacity: 0;\r\n  }\r\n\r\n  .menu > div > ul > li {\r\n    list-style: none;\r\n  }\r\n\r\n  .menu > div > ul > li > a {\r\n    text-decoration: none;\r\n    margin: 0.5rem;\r\n    display: inline-block;\r\n    font-size: 1.2rem;\r\n    font-weight: 550;\r\n    text-transform: uppercase;\r\n    color: whitesmoke;\r\n    transition: 0.6s;\r\n    &:hover {\r\n      color: #61dafb;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Menu;\r\n","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport {SocialData, HomeIcon} from '../context/SocialData';\r\nimport Menu from './Menu';\r\n//yarn add styled-components\r\n\r\nconst NavBar = () => {\r\n  const [size, setSize] = useState ([window.innerWidth, window.innerHeight]);\r\n  const [width, height] = [...size];\r\n\r\n  useEffect (() => {\r\n    const handleResize = () => {\r\n      setSize ([window.innerWidth, window.innerHeight]);\r\n    };\r\n    window.addEventListener ('resize', handleResize);\r\n    /////BOA PRATICA, LIMPAR EVENTO COM RETURN//\r\n    return () => {\r\n      window.removeEventListener ('resize', handleResize);\r\n    };\r\n  });\r\n  if (width >= 640 && height > 450) {\r\n    return (\r\n      <NavWrapper>\r\n        <div className=\"nav-rotate\">\r\n          <div className=\"icons\">\r\n            {SocialData.map (item => (\r\n              <a\r\n                className=\"iconJS\"\r\n                href={item.url}\r\n                target=\"blank\"\r\n                key={item.id}\r\n              >\r\n                {item.icon}\r\n              </a>\r\n            ))}\r\n          </div>\r\n          <div>{/* LAYOUT ESPACO */}</div>\r\n          <div>Contato</div>\r\n          <div>Sobre Min</div>\r\n          <div>Projetos</div>\r\n          <div>{/* LAYOUT ESPACO */}</div>\r\n          <div className=\"iconHome\">\r\n            <a className=\"iconJS\" href={HomeIcon.url}>\r\n              {HomeIcon.icon}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </NavWrapper>\r\n    );\r\n  } else {\r\n    return <Menu />;\r\n  }\r\n};\r\n\r\nconst NavWrapper = styled.nav`\r\n  .nav-rotate {\r\n    color: whitesmoke;\r\n    width: 100vh;\r\n    height: 16vh;\r\n    font-size: 20px;\r\n    font-family: Oxygen;\r\n    background: #282c34;\r\n    display: flex;\r\n    position: fixed;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    -webkit-transform-origin: left top;\r\n    -webkit-transform: rotate(-90deg) translateX(-100%);\r\n  }\r\n  .icons {\r\n    width: 22vh;\r\n    font-size: 16=8px;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n  }\r\n  .iconJS {\r\n    color: whitesmoke;\r\n    -webkit-transform-origin: left top;\r\n    -webkit-transform: rotate(-270deg) translateX(25%);\r\n    transition: 1s;\r\n    &:hover {\r\n      color: #61dafb;\r\n    }\r\n  }\r\n  .iconHome {\r\n    font-size: 26px;\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport default NavBar;\r\n","import React from 'react';\n\nimport Home from './pages/HomePage';\nimport Projects from './pages/ProjectsPage';\n\nimport {Switch, Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NavBar from './components/NavBar';\n//yarn add react-router-dom\n//yarn add react-bootstrap bootstrap\n\n//import logo from './logo.svg';\n//import './App.css';\n\nfunction App() {\n  return (\n    <>\n      <NavBar></NavBar>\n      <Switch>\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/projects\" component={Projects}></Route>\n        <Route exact component={Home} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\n//yarn add react-router-dom\n//yarn add gh-pages\n\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}